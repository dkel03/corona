{"version":3,"sources":["components/Hospital/hospital.js","hooks.js","components/Hospital/hospitalPresenter.js","components/Hospital/hospitalContainer.js","App.js","index.js"],"names":["HospitalCard","styled","div","ItemBox","SiDo","span","SiGunGu","Name","Telno","Hospital","props","sgguNm","sidoNm","yadmNm","telno","initialValue","validator","useState","value","setValue","onChange","event","target","willUpdate","Card","SearchHospitalInput","input","attrs","placeholder","InputExplain","p","HospitalPresenter","name","hooks","length","hospitals","map","item","index","includes","key","HospitalContainer","setHospitals","useEffect","axios","get","then","res","data","catch","e","console","log","App","ReactDOM","render","document","getElementById"],"mappings":"whCAGA,IAmBMA,EAAeC,IAAOC,IAAV,KAOZC,EAAUF,IAAOC,IAAV,KAOPE,EAAOH,IAAOI,KAAV,KAKJC,EAAUL,IAAOI,KAAV,KAIPE,EAAON,IAAOI,KAAV,KAIJG,EAAQP,IAAOC,IAAV,KAKIO,EAnDE,SAACC,GAAW,IACnBC,EAAkCD,EAAlCC,OAAQC,EAA0BF,EAA1BE,OAAQC,EAAkBH,EAAlBG,OAAQC,EAAUJ,EAAVI,MAEhC,OACE,kBAACd,EAAD,KACE,kBAACG,EAAD,KACE,kBAACC,EAAD,KAAOQ,GACP,kBAACN,EAAD,KAAUK,IAEZ,kBAACR,EAAD,KACE,kBAACI,EAAD,KAAOM,IAET,kBAACV,EAAD,KACE,kBAACK,EAAD,KAAQM,MCKD,EAnBE,SAACC,EAAcC,GAAc,MAElBC,mBAASF,GAFS,mBAErCG,EAFqC,KAE9BC,EAF8B,KAgB5C,MAAO,CAAED,QAAOE,SAbC,SAACC,GAAU,IAGdH,EACRG,EADFC,OAAUJ,MAERK,GAAa,EACQ,oBAAdP,IACTO,EAAaP,EAAUE,IAErBK,GACFJ,EAASD,M,scCTf,IA4BMM,EAAOvB,IAAOC,IAAV,KAMJuB,EAAsBxB,IAAOyB,MAAMC,MAAM,CAC7CC,YAAa,2DADa3B,CAAH,KAUnB4B,EAAe5B,IAAO6B,EAAV,KAMHC,EAlDW,SAACrB,GACzB,IAAMsB,EAAOC,EAAe,gBAAM,SAACf,GAAD,OAAWA,EAAMgB,QAAU,MAE7D,OACE,kBAAC,WAAD,KACE,kBAACV,EAAD,KACE,kBAACC,EAAwBO,GACzB,kBAACH,EAAD,wIAGA,kBAACA,EAAD,iHAIDnB,EAAMyB,UAAUC,KAAI,SAACC,EAAMC,GAC1B,GACEN,EAAKd,QACJmB,EAAKzB,SAAWoB,EAAKd,OACpBmB,EAAK1B,OAAO4B,SAASP,EAAKd,QAC1BmB,EAAKvB,MAAMyB,SAASP,EAAKd,MAAQ,MAEnC,OAAO,kBAAC,EAAD,eAAUsB,IAAKF,GAAWD,SCR5BI,EAdW,WAAO,IAAD,EACIxB,mBAAS,IADb,mBACvBkB,EADuB,KACZO,EADY,KAW9B,OARAC,qBAAU,WACRC,IAAMC,IAAI,0CACPC,MAAK,SAAAC,GACJL,EAAaK,EAAIC,SAEpBC,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,QACzB,IAEK,kBAAC,EAAD,CAAmBf,UAAWA,KCLzBkB,MARf,WACE,OACE,oCACE,kBAAC,EAAD,QCFNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.000a1264.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Hospital = (props) => {\n  const { sgguNm, sidoNm, yadmNm, telno } = props;\n\n  return (\n    <HospitalCard>\n      <ItemBox>\n        <SiDo>{sidoNm}</SiDo>\n        <SiGunGu>{sgguNm}</SiGunGu>\n      </ItemBox>\n      <ItemBox>\n        <Name>{yadmNm}</Name>\n      </ItemBox>\n      <ItemBox>\n        <Telno>{telno}</Telno>\n      </ItemBox>\n    </HospitalCard>\n  )\n}\n\nconst HospitalCard = styled.div`\n  margin: 10px;\n  background-color: #2ecc71;\n  border: 1px solid #2ecc71;\n  border-radius: 5px;\n  max-width: 300px;\n`\nconst ItemBox = styled.div`\n  margin: 8px;\n  padding: 5px;\n  background-color: white;\n  border: 1px solid white;\n  border-radius: 5px;\n`\nconst SiDo = styled.span`\n  font-size: 20px;\n  margin-right: 5px;\n  color: #95a5a6\n`\nconst SiGunGu = styled.span`\n  font-size: 15px;\n  color: #95a5a6\n`\nconst Name = styled.span`\n  font-size: 15px;\n  color: #95a5a6\n`\nconst Telno = styled.div`\n  font-size: 15px;\n  color: #95a5a6\n`\n\nexport default Hospital;","import { useState } from \"react\";\n\nconst useInput = (initialValue, validator) => {\n  // hooks인데, 초기화값, 검증함수를 받는다\n  const [value, setValue] = useState(initialValue); // 초기화 값으로 state를 생성한다.\n  const onChange = (event) => {\n    // 이벤트를 받아, 객체에 저장한다.\n    const {\n      target: { value },\n    } = event;\n    let willUpdate = true;\n    if (typeof validator === \"function\") {\n      willUpdate = validator(value);\n    }\n    if (willUpdate) {\n      setValue(value);\n    }\n  };\n  return { value, onChange };\n};\n\nexport default { useInput };","import React from \"react\";\nimport { Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport Hospital from \"./hospital\";\nimport hooks from \"../../hooks\";\n\nconst HospitalPresenter = (props) => {\n  const name = hooks.useInput(\"서울\", (value) => value.length <= 10);\n\n  return (\n    <Fragment>\n      <Card>\n        <SearchHospitalInput {...name} />\n        <InputExplain>\n          시도 및 시군구, 전화번호를 통합하여 검색합니다.\n        </InputExplain>\n        <InputExplain>\n          ex) '서울' 또는 '중구' 또는 '02'(전화번호 일부)\n        </InputExplain>\n      </Card>\n      {props.hospitals.map((item, index) => {\n        if (\n          name.value &&\n          (item.sidoNm === name.value ||\n            item.sgguNm.includes(name.value) ||\n            item.telno.includes(name.value + \"-\"))\n        ) {\n          return <Hospital key={index} {...item} />;\n        }\n      })}\n    </Fragment>\n  );\n};\n\nconst Card = styled.div`\n  margin: 10px;\n  padding: 10px;\n  max-width: 300px;\n  border: 1px solid;\n`;\nconst SearchHospitalInput = styled.input.attrs({\n  placeholder: \"검색어를 입력하세요\",\n})`\n  box-shadow: 0 0px 0px white;\n  width: 200px;\n  height: 30px;\n  margin: 10px;\n  font-size: 20px;\n`;\n\nconst InputExplain = styled.p`\n  font-size: 12px;\n  margin: 10px;\n  align-item: center;\n`;\n\nexport default HospitalPresenter;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport HospitalPresenter from \"./hospitalPresenter\";\n\nconst HospitalContainer = () => {\n  const [hospitals, setHospitals] = useState([]);\n  \n  useEffect(() => {\n    axios.get(\"https://corona-back.herokuapp.com/api/\")\n      .then(res => {\n        setHospitals(res.data);\n      })\n    .catch((e) => console.log(e));\n  }, []);\n\n  return (<HospitalPresenter hospitals={hospitals}/>);\n};\n\nexport default HospitalContainer;\n","import React from \"react\";\nimport HospitalContainer from './components/Hospital/hospitalContainer'\n\nfunction App() {\n  return (\n    <>\n      <HospitalContainer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}